##
# This code was generated by
# \ / _    _  _|   _  _
#  | (_)\/(_)(_|\/| |(/_  v1.0.0
#       /       /
#
# frozen_string_literal: true

module Twilio
  module REST
    class Video < Domain
      class V1 < Version
        class RoomContext < InstanceContext
          class ParticipantContext < InstanceContext
            class AnonymizeList < ListResource
              ##
              # Initialize the AnonymizeList
              # @param [Version] version Version that contains the resource
              # @param [String] room_sid The SID of the participant's room.
              # @param [String] sid The unique string that we created to identify the
              #   RoomParticipant resource.
              # @return [AnonymizeList] AnonymizeList
              def initialize(version, room_sid: nil, sid: nil)
                super(version)

                # Path Solution
                @solution = {room_sid: room_sid, sid: sid}
              end

              ##
              # Provide a user friendly representation
              def to_s
                '#<Twilio.Video.V1.AnonymizeList>'
              end
            end

            class AnonymizePage < Page
              ##
              # Initialize the AnonymizePage
              # @param [Version] version Version that contains the resource
              # @param [Response] response Response from the API
              # @param [Hash] solution Path solution for the resource
              # @return [AnonymizePage] AnonymizePage
              def initialize(version, response, solution)
                super(version, response)

                # Path Solution
                @solution = solution
              end

              ##
              # Build an instance of AnonymizeInstance
              # @param [Hash] payload Payload response from the API
              # @return [AnonymizeInstance] AnonymizeInstance
              def get_instance(payload)
                AnonymizeInstance.new(@version, payload, room_sid: @solution[:room_sid], sid: @solution[:sid], )
              end

              ##
              # Provide a user friendly representation
              def to_s
                '<Twilio.Video.V1.AnonymizePage>'
              end
            end

            class AnonymizeContext < InstanceContext
              ##
              # Initialize the AnonymizeContext
              # @param [Version] version Version that contains the resource
              # @param [String] room_sid The SID of the room with the participant to update.
              # @param [String] sid The SID of the RoomParticipant resource to update.
              # @return [AnonymizeContext] AnonymizeContext
              def initialize(version, room_sid, sid)
                super(version)

                # Path Solution
                @solution = {room_sid: room_sid, sid: sid, }
                @uri = "/Rooms/#{@solution[:room_sid]}/Participants/#{@solution[:sid]}/Anonymize"
              end

              ##
              # Update the AnonymizeInstance
              # @return [AnonymizeInstance] Updated AnonymizeInstance
              def update
                payload = @version.update('POST', @uri)

                AnonymizeInstance.new(@version, payload, room_sid: @solution[:room_sid], sid: @solution[:sid], )
              end

              ##
              # Provide a user friendly representation
              def to_s
                context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
                "#<Twilio.Video.V1.AnonymizeContext #{context}>"
              end

              ##
              # Provide a detailed, user friendly representation
              def inspect
                context = @solution.map {|k, v| "#{k}: #{v}"}.join(',')
                "#<Twilio.Video.V1.AnonymizeContext #{context}>"
              end
            end

            class AnonymizeInstance < InstanceResource
              ##
              # Initialize the AnonymizeInstance
              # @param [Version] version Version that contains the resource
              # @param [Hash] payload payload that contains response from Twilio
              # @param [String] room_sid The SID of the participant's room.
              # @param [String] sid The unique string that we created to identify the
              #   RoomParticipant resource.
              # @return [AnonymizeInstance] AnonymizeInstance
              def initialize(version, payload, room_sid: nil, sid: nil)
                super(version)

                # Marshaled Properties
                @properties = {
                    'sid' => payload['sid'],
                    'room_sid' => payload['room_sid'],
                    'account_sid' => payload['account_sid'],
                    'status' => payload['status'],
                    'identity' => payload['identity'],
                    'date_created' => Twilio.deserialize_iso8601_datetime(payload['date_created']),
                    'date_updated' => Twilio.deserialize_iso8601_datetime(payload['date_updated']),
                    'start_time' => Twilio.deserialize_iso8601_datetime(payload['start_time']),
                    'end_time' => Twilio.deserialize_iso8601_datetime(payload['end_time']),
                    'duration' => payload['duration'] == nil ? payload['duration'] : payload['duration'].to_i,
                    'url' => payload['url'],
                }

                # Context
                @instance_context = nil
                @params = {'room_sid' => room_sid, 'sid' => sid, }
              end

              ##
              # Generate an instance context for the instance, the context is capable of
              # performing various actions.  All instance actions are proxied to the context
              # @return [AnonymizeContext] AnonymizeContext for this AnonymizeInstance
              def context
                unless @instance_context
                  @instance_context = AnonymizeContext.new(@version, @params['room_sid'], @params['sid'], )
                end
                @instance_context
              end

              ##
              # @return [String] The unique string that identifies the resource
              def sid
                @properties['sid']
              end

              ##
              # @return [String] The SID of the participant's room
              def room_sid
                @properties['room_sid']
              end

              ##
              # @return [String] The SID of the Account that created the resource
              def account_sid
                @properties['account_sid']
              end

              ##
              # @return [anonymize.Status] The status of the Participant
              def status
                @properties['status']
              end

              ##
              # @return [String] The SID of the participant
              def identity
                @properties['identity']
              end

              ##
              # @return [Time] The ISO 8601 date and time in GMT when the resource was created
              def date_created
                @properties['date_created']
              end

              ##
              # @return [Time] The ISO 8601 date and time in GMT when the resource was last updated
              def date_updated
                @properties['date_updated']
              end

              ##
              # @return [Time] The time of participant connected to the room in ISO 8601 format
              def start_time
                @properties['start_time']
              end

              ##
              # @return [Time] The time when the participant disconnected from the room in ISO 8601 format
              def end_time
                @properties['end_time']
              end

              ##
              # @return [String] Duration of time in seconds the participant was connected
              def duration
                @properties['duration']
              end

              ##
              # @return [String] The absolute URL of the resource
              def url
                @properties['url']
              end

              ##
              # Update the AnonymizeInstance
              # @return [AnonymizeInstance] Updated AnonymizeInstance
              def update
                context.update
              end

              ##
              # Provide a user friendly representation
              def to_s
                values = @params.map{|k, v| "#{k}: #{v}"}.join(" ")
                "<Twilio.Video.V1.AnonymizeInstance #{values}>"
              end

              ##
              # Provide a detailed, user friendly representation
              def inspect
                values = @properties.map{|k, v| "#{k}: #{v}"}.join(" ")
                "<Twilio.Video.V1.AnonymizeInstance #{values}>"
              end
            end
          end
        end
      end
    end
  end
end